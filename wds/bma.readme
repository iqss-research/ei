7/31/2001 
Note on eimodels_ave() proc

Right now, eimodels_ave() allows users to use different t,x, and n for each model though it warns them by issuing a warning. However, it only stores the values of t, x and n from the first model even when users use different t,x, and n. This affects some of eiread() calculation - not the parameters stored in the output buffer such as betabs, betaws, aggs, postprob, etc. In the future we might want to modify eimodels_ave() such that it stores all the different t, x, and n. Then, we also need to adjust eiread() to compute appropriate parameter values using different t, x, and n.

A sample code from the manual (_Esims = 100 so that it runs quickly...)

new;                        @ clear workspace @
library ei;                 @ initialize libraries @
clear t,x,n;                @ clear all variables in dataset @
loadvars sample.asc t x n;  @ load variables from disk file @
ndbuf="";                   @ initialize a data buffer @

eiset;                                   @ clear for Model 1 @
_Eres = vput(_Eres, "Model 1", "titl");  @ print out model number @
_Eeta = 1;                               @ zb=x, zw=1 @
_Ealpha_B = {0 2};                       @ prior for betaB @
_Esims = 100;                           @ number of simulation @
_EiLlikS = 1;           @ store log-likelihood at each simulation @
ndbuf = eimodels_def(ndbuf,1,t,x,n,1,1); @ save Model 1 @

eiset;                                   @ clear for Model 2 @
_Eres = vput(_Eres, "Model 2", "titl");
_Eeta = 2;                               @ zb=1, zw=x @
_Ealpha_W = {0 2};                       @ prior for betaW @
_Esims = 100;
_EiLlikS = 1;
ndbuf = eimodels_def(ndbuf,2,t,x,n,1,1); @ save Model 2 @

eiset;                                   @ clear for Model 3 @
_Eres = vput(_Eres, "Model 2", "titl");
_Eeta = 3;                               @ zb=x, zw=x @
_Ealpha_B = {0 2};                       @ prior for betaB @
_Ealpha_W = {0 2};                       @ prior for betaW @
_Esims = 100;
_EiLlikS = 1;
ndbuf = eimodels_def(ndbuf,3,t,x,n,1,1); @ save Model 3 @

save rvdef = ndbuf;       @ save ndbuf in file rvdef.fmt @

ndbres = eimodels_run(ndbuf);  @ run ei on all the models @
save rvres = ndbres;           @ save ndbres in file rvres.fmt @

_EIMetaR = 1;
call eiread(ndbres, "sum");    @ summary info for Model 1 @

_EIMetaR = 3;
graphon;
call eigraph(ndbres, "tomog"); @ tomography plot for Model 3 @

_EI_bma_prior = {0.2,0.4,0.4}; @ prior model probabilities @
dbres = eimodels_ave(ndbres);  @ Bayesian Model Averaging @
save rvbma = dbres;            @ save dbres in file rvbma.fmt @
